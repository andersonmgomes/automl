train_order,algorithm,features,n_features,train_time,mem_max,f1_weighted,accuracy,roc_auc_ovr_weighted,confusion_matrix
12,GaussianProcessClassifier(kernel=1**2 * RBF(length_scale=1)),"('petal_length', 'sepal_length')",2,28.59427980000001,1396.20703125,0.953216374269006,0.9533333333333334,0.986,"[[10  0  0]
 [ 0  8  2]
 [ 0  0 10]]"
2,GaussianProcessClassifier(kernel=1**2 * RBF(length_scale=1)),"('petal_length', 'sepal_width', 'sepal_length')",3,27.2402632,1385.625,0.9398496240601505,0.9400000000000001,0.9876666666666667,"[[10  0  0]
 [ 0  8  2]
 [ 0  0 10]]"
8,QuadraticDiscriminantAnalysis(),"('petal_length', 'sepal_width', 'sepal_length')",3,15.311026900000002,1386.64453125,0.9397483608009924,0.9400000000000001,0.9933333333333334,"[[10  0  0]
 [ 0  7  3]
 [ 0  0 10]]"
1,SVC(probability=True),"('petal_length', 'sepal_width', 'sepal_length')",3,9.045565300000007,1379.734375,0.933233082706767,0.9333333333333333,0.9893333333333333,"[[10  0  0]
 [ 0  9  1]
 [ 0  0 10]]"
0,KNeighborsClassifier(n_neighbors=3),"('petal_length', 'sepal_width', 'sepal_length')",3,15.917746699999995,1379.62109375,0.9330649856965646,0.9333333333333333,0.9726666666666667,"[[10  0  0]
 [ 0  8  2]
 [ 0  0 10]]"
5,"MLPClassifier(alpha=1, max_iter=1000)","('petal_length', 'sepal_width', 'sepal_length')",3,14.043293299999988,1386.24609375,0.9197994987468672,0.9200000000000002,0.9783333333333333,"[[10  0  0]
 [ 0  9  1]
 [ 0  0 10]]"
4,"RandomForestClassifier(max_depth=5, max_features=1, n_estimators=10)","('petal_length', 'sepal_width', 'sepal_length')",3,7.942107500000006,1386.015625,0.9131161236424395,0.9133333333333333,0.9713333333333333,"[[10  0  0]
 [ 0  9  1]
 [ 0  0 10]]"
3,DecisionTreeClassifier(max_depth=5),"('petal_length', 'sepal_width', 'sepal_length')",3,15.388053,1385.96875,0.906094529252424,0.9133333333333333,0.9386666666666666,"[[10  0  0]
 [ 0  8  2]
 [ 0  0 10]]"
7,GaussianNB(),"('petal_length', 'sepal_width', 'sepal_length')",3,15.25727599999999,1386.5390625,0.8791929318245109,0.8800000000000001,0.9726666666666667,"[[10  0  0]
 [ 0  9  1]
 [ 0  0 10]]"
10,LogisticRegression(),"('petal_length', 'sepal_width', 'sepal_length')",3,15.467286299999984,1395.171875,0.8442363885895989,0.8466666666666667,0.9536666666666667,"[[10  0  0]
 [ 0  7  3]
 [ 0  1  9]]"
11,SVC(probability=True),"('sepal_width', 'sepal_length')",2,15.645516799999996,1395.4765625,0.8060511427371031,0.8066666666666666,0.9096666666666666,"[[10  0  0]
 [ 0  8  2]
 [ 0  2  8]]"
6,AdaBoostClassifier(),"('petal_length', 'sepal_width', 'sepal_length')",3,8.854295399999984,1386.1953125,0.7402869390306012,0.78,0.9730000000000001,"[[10  0  0]
 [ 0  9  1]
 [ 0  8  2]]"
9,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, enable_categorical=False,
              eval_metric='mlogloss', gamma=0, gpu_id=-1, importance_type=None,
              interaction_constraints='', learning_rate=0.300000012,
              max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan,
              monotone_constraints='()', n_estimators=100, n_jobs=12,
              num_parallel_tree=1, objective='multi:softprob', predictor='auto',
              random_state=0, reg_alpha=0, reg_lambda=1, scale_pos_weight=None,
              subsample=1, tree_method='exact', use_label_encoder=False,
              validate_parameters=1, ...)","('petal_length', 'sepal_width', 'sepal_length')",3,8.98011919999999,1395.1484375,,,,"[[10  0  0]
 [ 0  8  2]
 [ 0  0 10]]"
