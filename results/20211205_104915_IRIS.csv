train_order,algorithm,features,n_features,train_time,mem_max,f1_weighted,accuracy,roc_auc_ovr_weighted,confusion_matrix
0,"RandomForestClassifier(max_depth=5, max_features=1, n_estimators=10)","('petal_length', 'sepal_length')",2,8.895216399999995,1586.27734375,0.9598997493734336,0.9400000000000001,0.982,"[[10  0  0]
 [ 0  9  1]
 [ 0  0 10]]"
3,GaussianProcessClassifier(kernel=1**2 * RBF(length_scale=1)),"('petal_length', 'sepal_width')",2,23.36811200000001,1602.22265625,0.953216374269006,0.9533333333333334,0.9896666666666665,"[[10  0  0]
 [ 0  9  1]
 [ 0  0 10]]"
5,SVC(probability=True),"('petal_length', 'sepal_length')",2,19.152428900000004,1602.75390625,0.95314852788537,0.9533333333333334,0.9953333333333333,"[[10  0  0]
 [ 0  9  1]
 [ 0  0 10]]"
4,KNeighborsClassifier(n_neighbors=3),"('petal_length', 'sepal_length')",2,17.544300300000003,1602.98046875,0.9464317359054203,0.9466666666666667,0.976,"[[10  0  0]
 [ 0  9  1]
 [ 0  0 10]]"
1,AdaBoostClassifier(),"('petal_length', 'sepal_length')",2,10.482973200000004,1586.7265625,0.9396470975418344,0.9400000000000001,0.9683333333333332,"[[10  0  0]
 [ 0  9  1]
 [ 0  0 10]]"
2,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, enable_categorical=False,
              eval_metric='mlogloss', gamma=0, gpu_id=-1, importance_type=None,
              interaction_constraints='', learning_rate=0.300000012,
              max_delta_step=0, max_depth=4, min_child_weight=1, missing=nan,
              monotone_constraints='()', n_estimators=150, n_jobs=12,
              num_parallel_tree=1, objective='multi:softprob', predictor='auto',
              random_state=0, reg_alpha=0, reg_lambda=1, scale_pos_weight=None,
              subsample=1, tree_method='exact', use_label_encoder=False,
              validate_parameters=1, ...)","('sepal_length',)",1,9.646006499999999,1598.984375,,,,"[[9 1 0]
 [2 8 0]
 [0 4 6]]"
