train_order,algorithm,features,n_features,train_time,mem_max,f1_weighted,accuracy,roc_auc_ovr_weighted,confusion_matrix
21,QuadraticDiscriminantAnalysis(),"('petal_length', 'sepal_length')",2,7.119573800000012,2795.30859375,0.928888888888889,0.9333333333333333,0.9666666666666666,"[[10  0  0]
 [ 0  9  1]
 [ 0  1  9]]"
26,QuadraticDiscriminantAnalysis(),"('petal_length',)",1,10.231970199999978,2795.4921875,0.8622222222222223,0.8666666666666668,0.9583333333333333,"[[10  0  0]
 [ 0 10  0]
 [ 0  3  7]]"
8,QuadraticDiscriminantAnalysis(),"('petal_length', 'sepal_width', 'sepal_length')",3,7.56997969999999,2218.359375,0.8622222222222223,0.8666666666666668,0.9916666666666668,"[[10  0  0]
 [ 0  9  1]
 [ 0  1  9]]"
24,KNeighborsClassifier(),"('petal_length', 'sepal_length')",2,7.1065854,2795.21875,0.8622222222222222,0.8666666666666666,0.95,"[[10  0  0]
 [ 0  9  1]
 [ 0  3  7]]"
18,"StackingClassifier(estimators=[('est_0', QuadraticDiscriminantAnalysis()),
                               ('est_1', KNeighborsClassifier()),
                               ('est_2', RandomForestClassifier(n_jobs=-1))],
                   n_jobs=-1)","('petal_length', 'sepal_length')",2,21.466405699999996,2802.421875,0.8577777777777778,0.8666666666666668,0.95,"[[10  0  0]
 [ 0  8  2]
 [ 0  1  9]]"
13,"VotingClassifier(estimators=[('est_0', QuadraticDiscriminantAnalysis()),
                             ('est_1', RandomForestClassifier(n_jobs=-1)),
                             ('est_2',
                              XGBClassifier(base_score=0.5, booster='gbtree',
                                            colsample_bylevel=1,
                                            colsample_bynode=1,
                                            colsample_bytree=1,
                                            enable_categorical=False,
                                            eval_metric='mlogloss', gamma=0,
                                            gpu_id=-1, importance_type=None,
                                            interaction_constraints='',
                                            learning_rate=0.300000012,
                                            max_delta_step=0, max_depth=6,
                                            min_child_weight=1, missing=nan,
                                            monotone_constraints='()',
                                            n_estimators=100, n_jobs=12,
                                            num_parallel_tree=1,
                                            objective='multi:softprob',
                                            predictor='auto', random_state=0,
                                            reg_alpha=0, reg_lambda=1,
                                            scale_pos_weight=None, subsample=1,
                                            tree_method='exact',
                                            use_label_encoder=False,
                                            validate_parameters=1, ...))],
                 n_jobs=-1)","('petal_length', 'sepal_width', 'sepal_length')",3,13.340423400000006,2755.390625,0.8577777777777778,0.8666666666666668,,"[[10  0  0]
 [ 0  8  2]
 [ 0  1  9]]"
4,RandomForestClassifier(n_jobs=-1),"('petal_length', 'sepal_width', 'sepal_length')",3,9.262377300000004,2216.88671875,0.8400000000000001,0.8333333333333334,0.9375,"[[10  0  0]
 [ 0  8  2]
 [ 0  1  9]]"
25,SVC(probability=True),"('petal_length', 'sepal_length')",2,7.1221160999999995,2794.99609375,0.8266666666666668,0.8333333333333334,0.875,"[[10  0  0]
 [ 0 10  0]
 [ 0  3  7]]"
9,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, enable_categorical=False,
              eval_metric='mlogloss', gamma=0, gpu_id=-1, importance_type=None,
              interaction_constraints='', learning_rate=0.300000012,
              max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan,
              monotone_constraints='()', n_estimators=100, n_jobs=12,
              num_parallel_tree=1, objective='multi:softprob', predictor='auto',
              random_state=0, reg_alpha=0, reg_lambda=1, scale_pos_weight=None,
              subsample=1, tree_method='exact', use_label_encoder=False,
              validate_parameters=1, ...)","('petal_length', 'sepal_width', 'sepal_length')",3,5.2434107000000125,2228.65234375,0.8222222222222222,0.8333333333333334,0.9166666666666667,"[[10  0  0]
 [ 0  8  2]
 [ 0  1  9]]"
22,GradientBoostingClassifier(),"('petal_length', 'sepal_length')",2,5.6438400000000115,2795.359375,0.8222222222222222,0.8333333333333334,0.9,"[[10  0  0]
 [ 0  8  2]
 [ 0  2  8]]"
17,"VotingClassifier(estimators=[('est_0', QuadraticDiscriminantAnalysis()),
                             ('est_1', RandomForestClassifier(n_jobs=-1)),
                             ('est_2',
                              XGBClassifier(base_score=0.5, booster='gbtree',
                                            colsample_bylevel=1,
                                            colsample_bynode=1,
                                            colsample_bytree=1,
                                            enable_categorical=False,
                                            eval_metric='mlogloss', gamma=0,
                                            gpu_id=-1, importance_type=None,
                                            interaction_constraints='',
                                            learning_rate=0.300000012,
                                            max_delta_step=0, max_depth=6,
                                            min_child_weight=1, missing=nan,
                                            monotone_constraints='()',
                                            n_estimators=100, n_jobs=12,
                                            num_parallel_tree=1,
                                            objective='multi:softprob',
                                            predictor='auto', random_state=0,
                                            reg_alpha=0, reg_lambda=1,
                                            scale_pos_weight=None, subsample=1,
                                            tree_method='exact',
                                            use_label_encoder=False,
                                            validate_parameters=1, ...))],
                 n_jobs=-1)","('petal_length', 'sepal_length')",2,7.776918800000004,2791.34375,0.8222222222222222,0.8333333333333334,,"[[10  0  0]
 [ 0  8  2]
 [ 0  2  8]]"
1,SVC(probability=True),"('petal_length', 'sepal_width', 'sepal_length')",3,7.140397700000001,1379.2734375,0.8088888888888889,0.8333333333333333,0.8,"[[10  0  0]
 [ 0  9  1]
 [ 0  3  7]]"
29,RandomForestClassifier(n_jobs=-1),"('petal_length', 'sepal_length')",2,5.54806050000002,2796.1328125,0.7911111111111111,0.8,0.9333333333333332,"[[10  0  0]
 [ 0  8  2]
 [ 0  2  8]]"
14,"StackingClassifier(estimators=[('est_0', QuadraticDiscriminantAnalysis()),
                               ('est_1', KNeighborsClassifier()),
                               ('est_2', RandomForestClassifier(n_jobs=-1))],
                   n_jobs=-1)","('petal_length', 'sepal_width', 'sepal_length')",3,22.458750199999997,2793.5546875,0.7866666666666667,0.8,0.9666666666666668,"[[10  0  0]
 [ 0  8  2]
 [ 0  1  9]]"
20,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, enable_categorical=False,
              eval_metric='mlogloss', gamma=0, gpu_id=-1, importance_type=None,
              interaction_constraints='', learning_rate=0.300000012,
              max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan,
              monotone_constraints='()', n_estimators=100, n_jobs=12,
              num_parallel_tree=1, objective='multi:softprob', predictor='auto',
              random_state=0, reg_alpha=0, reg_lambda=1, scale_pos_weight=None,
              subsample=1, tree_method='exact', use_label_encoder=False,
              validate_parameters=1, ...)","('petal_length', 'sepal_length')",2,5.159660099999996,2795.18359375,0.7866666666666667,0.8,0.9333333333333333,"[[10  0  0]
 [ 0  8  2]
 [ 0  2  8]]"
7,GaussianNB(),"('petal_length', 'sepal_width', 'sepal_length')",3,7.411438000000004,2217.7890625,0.7866666666666666,0.8333333333333333,0.9666666666666666,"[[10  0  0]
 [ 0 10  0]
 [ 0  5  5]]"
19,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, enable_categorical=False,
              eval_metric='mlogloss', gamma=0, gpu_id=-1, importance_type=None,
              interaction_constraints='', learning_rate=0.300000012,
              max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan,
              monotone_constraints='()', n_estimators=100, n_jobs=12,
              num_parallel_tree=1, objective='multi:softprob', predictor='auto',
              random_state=0, reg_alpha=0, reg_lambda=1, scale_pos_weight=None,
              subsample=1, tree_method='exact', use_label_encoder=False,
              validate_parameters=1, ...)","('petal_length', 'sepal_width')",2,5.326172700000001,2795.2734375,0.7688888888888888,0.8,0.925,"[[10  0  0]
 [ 0  8  2]
 [ 0  5  5]]"
3,DecisionTreeClassifier(),"('petal_length', 'sepal_width', 'sepal_length')",3,6.813561800000002,1383.46484375,0.7555555555555556,0.7666666666666667,0.85,"[[10  0  0]
 [ 0  8  2]
 [ 0  3  7]]"
2,GaussianProcessClassifier(),"('petal_length', 'sepal_width', 'sepal_length')",3,3.8059139,1383.58203125,0.7555555555555555,0.8,0.8916666666666666,"[[10  0  0]
 [ 0  8  2]
 [ 0  4  6]]"
15,LogisticRegression(),"('petal_length', 'sepal_width', 'sepal_length')",3,7.135553999999985,2784.828125,0.7555555555555555,0.8,0.9,"[[10  0  0]
 [ 0  8  2]
 [ 0  4  6]]"
11,GradientBoostingClassifier(),"('petal_length', 'sepal_width', 'sepal_length')",3,5.855030800000009,2228.9375,0.7333333333333333,0.7666666666666667,0.9333333333333332,"[[10  0  0]
 [ 0  8  2]
 [ 0  3  7]]"
5,MLPClassifier(),"('petal_length', 'sepal_width', 'sepal_length')",3,4.652631999999997,2217.12890625,0.7155555555555555,0.7666666666666666,0.9166666666666666,"[[10  0  0]
 [ 0  8  2]
 [ 0  5  5]]"
6,AdaBoostClassifier(),"('petal_length', 'sepal_width', 'sepal_length')",3,4.514967899999988,2217.2578125,0.7022222222222222,0.7333333333333333,0.9333333333333332,"[[10  0  0]
 [ 0  8  2]
 [ 0  5  5]]"
0,KNeighborsClassifier(),"('petal_length', 'sepal_width', 'sepal_length')",3,7.096215800000003,1379.17578125,0.6977777777777778,0.7666666666666667,0.9166666666666666,"[[10  0  0]
 [ 0  8  2]
 [ 0  4  6]]"
31,GaussianProcessClassifier(),"('petal_length', 'sepal_length')",2,3.879399400000011,2797.94140625,0.6799999999999999,0.7333333333333333,0.8416666666666668,"[[10  0  0]
 [ 1  7  2]
 [ 0  3  7]]"
28,MultinomialNB(),"('petal_length', 'sepal_length')",2,7.0249699000000305,2795.203125,0.6577777777777778,0.6666666666666666,0.825,"[[9 1 0]
 [0 5 5]
 [0 7 3]]"
16,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, enable_categorical=False,
              eval_metric='mlogloss', gamma=0, gpu_id=-1, importance_type=None,
              interaction_constraints='', learning_rate=0.300000012,
              max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan,
              monotone_constraints='()', n_estimators=100, n_jobs=12,
              num_parallel_tree=1, objective='multi:softprob', predictor='auto',
              random_state=0, reg_alpha=0, reg_lambda=1, scale_pos_weight=None,
              subsample=1, tree_method='exact', use_label_encoder=False,
              validate_parameters=1, ...)","('sepal_width', 'sepal_length')",2,6.957979200000011,2787.92578125,0.6355555555555555,0.6666666666666666,0.8083333333333333,"[[10  0  0]
 [ 1  7  2]
 [ 1  8  1]]"
10,MultinomialNB(),"('petal_length', 'sepal_width', 'sepal_length')",3,8.532721999999993,2228.890625,0.6355555555555555,0.6666666666666666,0.8333333333333334,"[[10  0  0]
 [ 0  7  3]
 [ 0  5  5]]"
23,QuadraticDiscriminantAnalysis(),"('sepal_width', 'sepal_length')",2,7.114535200000006,2794.97265625,0.6177777777777778,0.6666666666666667,0.8333333333333333,"[[10  0  0]
 [ 0  7  3]
 [ 0  6  4]]"
30,"XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
              colsample_bynode=1, colsample_bytree=1, enable_categorical=False,
              eval_metric='mlogloss', gamma=0, gpu_id=-1, importance_type=None,
              interaction_constraints='', learning_rate=0.300000012,
              max_delta_step=0, max_depth=6, min_child_weight=1, missing=nan,
              monotone_constraints='()', n_estimators=100, n_jobs=12,
              num_parallel_tree=1, objective='multi:softprob', predictor='auto',
              random_state=0, reg_alpha=0, reg_lambda=1, scale_pos_weight=None,
              subsample=1, tree_method='exact', use_label_encoder=False,
              validate_parameters=1, ...)","('sepal_length',)",1,5.303493399999979,2797.625,0.5577777777777777,0.5999999999999999,0.7916666666666666,"[[10  0  0]
 [ 1  7  2]
 [ 1  7  2]]"
12,HistGradientBoostingClassifier(),"('petal_length', 'sepal_width', 'sepal_length')",3,6.417937499999994,2228.92578125,0.16666666666666666,0.3333333333333333,0.5,"[[10  0  0]
 [ 0  9  1]
 [ 0  3  7]]"
27,HistGradientBoostingClassifier(),"('petal_length', 'sepal_length')",2,5.794538899999964,2795.07421875,0.16666666666666666,0.3333333333333333,0.5,"[[10  0  0]
 [ 0  8  2]
 [ 0  1  9]]"
