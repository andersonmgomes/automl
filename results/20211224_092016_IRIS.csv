algorithm,params,features,n_features,train_time,predict_time,mem_max,f1_weighted,balanced_accuracy,roc_auc_ovr_weighted,confusion_matrix
<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,"OrderedDict([('priors', None)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.0025205999999968753,0.00034668000000029526,1902.75,1.0,1.0,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  0 10]]"
<class 'sklearn.ensemble._voting.VotingClassifier'>,"OrderedDict([('n_jobs', -1), ('voting', 'soft'), ('estimators', [('e1', QuadraticDiscriminantAnalysis()), ('e2', LogisticRegression(C=1000.0, n_jobs=-1)), ('e3', KNeighborsClassifier(n_jobs=-1, n_neighbors=11, p=3))])])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.07054209999998307,0.005242156666667105,1996.84765625,1.0,1.0,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  0 10]]"
<class 'sklearn.ensemble._stacking.StackingClassifier'>,"OrderedDict([('n_jobs', -1), ('stack_method', 'auto'), ('estimators', [('e1', QuadraticDiscriminantAnalysis()), ('e2', LogisticRegression(C=1000.0, n_jobs=-1)), ('e3', KNeighborsClassifier(n_jobs=-1, n_neighbors=11, p=3))])])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.3934825999999987,0.005288146666667141,2007.61328125,1.0,1.0,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  0 10]]"
<class 'sklearn.linear_model._logistic.LogisticRegression'>,"OrderedDict([('C', 1000.0), ('n_jobs', -1)])","('sepal_width', 'petal_length', 'petal_width')",3,0.019505400000014106,0.00030287666666595214,2053.328125,0.9665831244778613,0.9666666666666667,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  1  9]]"
<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,"OrderedDict([('priors', None)])","('sepal_length', 'petal_length', 'petal_width')",3,0.003062200000044868,0.0003792533333334328,2055.296875,0.9665831244778613,0.9666666666666667,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  1  9]]"
<class 'sklearn.linear_model._logistic.LogisticRegression'>,"OrderedDict([('C', 1000.0), ('n_jobs', -1)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.029477899999989177,0.00032127000000059525,1986.71875,0.9665831244778613,0.9666666666666667,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  1  9]]"
<class 'sklearn.tree._classes.DecisionTreeClassifier'>,"OrderedDict([('criterion', 'gini')])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.0028351999999927102,0.0003796400000003549,1859.6796875,0.9326599326599326,0.9333333333333332,0.95,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,"OrderedDict([('priors', None)])","('petal_length',)",1,0.0008480999999846972,0.00017462333333355672,2020.70703125,0.9326599326599326,0.9333333333333332,0.9966666666666667,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.naive_bayes.GaussianNB'>,"OrderedDict([('priors', None)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.0032374999999973397,0.000318636666666805,1900.58203125,0.9326599326599326,0.9333333333333332,0.9933333333333333,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.ensemble._gb.GradientBoostingClassifier'>,"OrderedDict([('loss', 'deviance')])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.28186230000000023,0.0005073666666665607,1972.859375,0.9326599326599326,0.9333333333333332,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier'>,"OrderedDict([('warm_start', True)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.3868457999999748,0.001843203333333084,1983.0546875,0.9326599326599326,0.9333333333333332,0.9866666666666667,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.gaussian_process._gpc.GaussianProcessClassifier'>,"OrderedDict([('copy_X_train', False), ('n_jobs', -1), ('warm_start', True)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.022891200000003664,0.002911463333333349,1850.63671875,0.9326599326599326,0.9333333333333332,0.9816666666666668,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>,"OrderedDict([('learning_rate', 'invscaling'), ('momentum', 0.5)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.12760639999999057,0.0003702466666666737,1895.5390625,0.9326599326599326,0.9333333333333332,0.9916666666666667,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.neighbors._classification.KNeighborsClassifier'>,"OrderedDict([('n_jobs', -1), ('n_neighbors', 11), ('p', 3)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.0024468000000013035,0.004902766666666617,1340.9140625,0.9326599326599326,0.9333333333333332,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.ensemble._gb.GradientBoostingClassifier'>,"OrderedDict([('loss', 'deviance')])","('sepal_width', 'petal_length', 'petal_width')",3,0.21184180000000197,0.00034623333333267206,2054.98046875,0.8976982097186702,0.9,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  3  7]]"
<class 'sklearn.ensemble._forest.RandomForestClassifier'>,"OrderedDict([('max_depth', 30), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 10), ('n_estimators', 120), ('n_jobs', -1)])","('sepal_length', 'sepal_width', 'petal_width')",3,0.2664363000000094,0.007589106666665657,2053.15625,0.8976982097186702,0.9,0.9783333333333334,"[[10  0  0]
 [ 0 10  0]
 [ 0  3  7]]"
<class 'xgboost.sklearn.XGBClassifier'>,"OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('eval_metric', 'mlogloss'), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 5), ('subsample', 0.6), ('use_label_encoder', False)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.10541719999997667,0.0008864900000001323,1966.1640625,0.8976982097186702,0.9,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  3  7]]"
<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>,"OrderedDict([('algorithm', 'SAMME.R')])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.08217770000000257,0.0011865699999996575,1900.2109375,0.8976982097186702,0.9,0.9666666666666667,"[[10  0  0]
 [ 0 10  0]
 [ 0  3  7]]"
<class 'sklearn.svm._classes.SVC'>,"OrderedDict([('C', 1000.0), ('class_weight', None), ('gamma', 'scale'), ('probability', True)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.004224000000000672,0.0003637466666667422,1685.6875,0.8976982097186702,0.9,0.9133333333333333,"[[10  0  0]
 [ 0 10  0]
 [ 0  3  7]]"
<class 'sklearn.ensemble._forest.RandomForestClassifier'>,"OrderedDict([('max_depth', 30), ('max_features', 'sqrt'), ('min_samples_leaf', 10), ('min_samples_split', 10), ('n_estimators', 120), ('n_jobs', -1)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.2723495999999983,0.006533886666666907,1891.78515625,0.8976982097186702,0.9,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  3  7]]"
<class 'sklearn.naive_bayes.MultinomialNB'>,"OrderedDict([('fit_prior', True)])","('sepal_length', 'sepal_width', 'petal_length', 'petal_width')",4,0.002968899999984842,0.00031670666666627767,1966.40234375,0.7687400318979267,0.7666666666666666,0.83,"[[9 1 0]
 [0 6 4]
 [0 2 8]]"
<class 'sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier'>,"OrderedDict([('warm_start', True)])","('sepal_length', 'sepal_width')",2,0.4172664000000168,0.0018298733333324436,2054.84375,0.5820105820105821,0.5666666666666668,0.7866666666666666,"[[8 2 0]
 [0 4 6]
 [0 5 5]]"
<class 'sklearn.ensemble._voting.VotingClassifier'>,"OrderedDict([('n_jobs', -1), ('voting', 'soft'), ('estimators', [('e1', QuadraticDiscriminantAnalysis()), ('e2', LogisticRegression(C=1000.0, n_jobs=-1)), ('e3', DecisionTreeClassifier())])])","('sepal_length', 'sepal_width', 'petal_width')",3,0.06961890000002313,0.000783563333334314,2055.75390625,0.9326599326599326,0.9333333333333332,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,"OrderedDict([('priors', None)])","('sepal_width', 'petal_length', 'petal_width')",3,0.0030358999999862135,0.00035166333333336297,2056.1875,1.0,1.0,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  0 10]]"
<class 'xgboost.sklearn.XGBClassifier'>,"OrderedDict([('alpha', 1.0), ('colsample_bytree', 0.8), ('eta', 0.05), ('eval_metric', 'mlogloss'), ('gamma', 0.05), ('lambda', 0.1), ('max_depth', 15), ('min_child_weight', 5), ('subsample', 0.6), ('use_label_encoder', False)])","('sepal_length', 'petal_length', 'petal_width')",3,0.10442560000001322,0.0008972866666662563,2113.88671875,0.8976982097186702,0.9,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  3  7]]"
<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,"OrderedDict([('priors', None)])","('sepal_length', 'sepal_width')",2,0.0029107000000294647,0.0003257033333322094,2114.0390625,0.7698957538774472,0.7666666666666667,0.895,"[[9 1 0]
 [0 8 2]
 [0 4 6]]"
<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,"OrderedDict([('priors', None)])","('sepal_width', 'petal_length')",2,0.002602900000056252,0.0003592266666676854,2113.7578125,0.9326599326599326,0.9333333333333332,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,"OrderedDict([('priors', None)])","('sepal_length', 'sepal_width', 'petal_width')",3,0.002455899999972644,0.0003349700000020069,2113.87109375,0.9665831244778613,0.9666666666666667,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  1  9]]"
<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,"OrderedDict([('priors', None)])","('sepal_length', 'sepal_width', 'petal_length')",3,0.0024578999999675943,0.00035266999999900386,2114.49609375,0.9665831244778613,0.9666666666666667,1.0,"[[10  0  0]
 [ 0 10  0]
 [ 0  1  9]]"
<class 'sklearn.ensemble._gb.GradientBoostingClassifier'>,"OrderedDict([('loss', 'deviance')])","('sepal_width', 'petal_length')",2,0.21382099999993898,0.00038215999999996106,2114.88671875,0.9326599326599326,0.9333333333333332,0.9666666666666667,"[[10  0  0]
 [ 0 10  0]
 [ 0  2  8]]"
